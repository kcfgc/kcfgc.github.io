name: Deploy Site

on:
  # Runs every day at 3:00am
  schedule:
    - cron: "0 9 * * *"
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    name: "Build"
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      HUGO_VERSION: 0.143.1
      BASE_URL: https://kcmagicpixel.com
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Install Dart Sass Embedded
        run: sudo snap install dart-sass-embedded
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Restore Hugo cache
        uses: actions/cache@v4
        with:
          path: /tmp/hugo_cache
          key: ${{ runner.os }}-build-${{ hashFiles('assets/**/*', 'content/**/*', 'data/**/*', 'static/**/*') }}
          restore-keys: |
            ${{ runner.os }}-build-
      - name: Restore Hugo resources
        uses: actions/cache@v4
        with:
          path: ./resources
          key: ${{ runner.os }}-resources-${{ hashFiles('assets/**/*', 'content/**/*', 'data/**/*', 'static/**/*') }}
          restore-keys: |
            ${{ runner.os }}-resources-
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
          TZ: America/Chicago
        run: |
          hugo \
            --minify \
            --baseURL "${BASE_URL}/"
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  # Deploy to pages
  deploy-pages:
    name: Deploy - Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  deploy-neocities:
    name: Deploy - Neocities
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Archive
        uses: actions/download-artifact@v4
        with:
          name: github-pages
      - name: Extract Archive
        run: |
          mkdir -p ./public
          tar -xvf artifact.tar -C ./public
      - name: Deploy to Neocities
        uses: bcomnes/deploy-to-neocities@v2
        with:
          api_token: ${{ secrets.NEOCITIES_API_TOKEN }}
          cleanup: true
          dist_dir: public
